/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/QC/fastqc"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: NANOPLOT {
        publishDir = [
            path: { "${params.outdir}/QC/nanoPlot"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: TRIMGALORE {
        publishDir = [
            path: { "${params.outdir}/QC/TrimAndFilter/trimmedSR"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: PORECHOP_PORECHOP {
        publishDir = [
            path: { "${params.outdir}/QC/TrimAndFilter/trimmedLR"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: FILTLONG {
        ext.args = [
            "--min_length 1000",
            "--keep_percent 90",
            "--target_bases 500000000",
        ].join(' ').trim()
        ext.prefix = {"${meta.id}.filt"}
        ext.when = params.filter
        publishDir = [
            path: { "${params.outdir}/QC/TrimAndFilter/filteredLR"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: UNICYCLER {
        publishDir = [
            path: { "${params.outdir}/Assembly/Unicycler"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: MEDAKA {
        publishDir = [
            path: { "${params.outdir}/Assembly"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: QUAST {
        publishDir = [
            path: { "${params.outdir}/QC"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: PROKKA {
        publishDir = [
            path: { "${params.outdir}/AssemblyAnalysis/prokka"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: AMRFINDERPLUS_RUN {
        publishDir = [
            path: { "${params.outdir}/AssemblyAnalysis/amrfinderplus"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: AMRFINDERPLUS_UPDATE {
        publishDir = [
            path: { "${params.outdir}/AssemblyAnalysis/amrfinderplus"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: BANDAGE_IMAGE {
        publishDir = [
            path: { "${params.outdir}/AssemblyAnalysis/bandage"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: PLASMIDFINDER {
        ext.args = ["-t ${params.plas_threshold}"].join(' ').trim()
        ext.when = params.plasmid
        publishDir = [
            path: { "${params.outdir}/PlasmidAnalysis/plasmidfinder"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: PROKKA_PLAS {
        publishDir = [
            path: { "${params.outdir}/PlasmidAnalysis/prokka"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: AMRFINDERPLUS_PLAS_RUN{
        publishDir = [
            path: { "${params.outdir}/PlasmidAnalysis/amrfinder"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: PLASMIDPULLER{
        publishDir = [
            path: { "${params.outdir}/PlasmidAnalysis/plasmidSeq"},
            mode: params.publish_dir_mode,
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}